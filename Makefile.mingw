#======================================================================
# ezQuake Makefile
# based on: Fuhquake Makefile && ZQuake Makefile && JoeQuake Makefile
#======================================================================

# compilation tool and detection of targets/achitecture
_E = @
CC = gcc
CC_BASEVERSION = $(shell $(CC) -dumpversion | sed -e 's/\..*//g')

# TYPE = release debug
TYPE=release
STRIP = $(_E)strip
STRIPFLAGS = --strip-unneeded --remove-section=.comment

# ARCH = x86 ppc
# OS = linux darwin freebsd
ARCH = $(shell uname -m | sed -e 's/i.86/x86/g' -e 's/Power Macintosh/ppc/g' -e 's/amd64/x86_64/g')
OS = $(shell uname -s | tr A-Z a-z | sed -e 's/mingw32.*/mingw/g')

# add special architecture based flags
ifeq ($(ARCH),x86_64)
	ARCH_CFLAGS = -march=nocona -m64
endif
ifeq ($(ARCH),x86)
	ARCH_CFLAGS = -march=i686 -mtune=generic -mmmx
endif
ifeq ($(ARCH),ppc)
	ARCH_CFLAGS = -arch ppc -faltivec -maltivec -mcpu=7450 -mtune=7450 -mpowerpc -mpowerpc-gfxopt
endif
ifeq ($(OS),mingw)
	DEFAULT_TARGET = win
	OS_GL_CFLAGS = -DDISABLE_ASM -D_WIN32_IE=0x400 -D_WIN32_WINNT=0x0500 -D_WIN32 -D_CRT_SECURE_NO_DEPRECATE -D_CRT_SECURE_NO_WARNINGS -D_CRT_DISABLE_PERFCRIT_LOCKS -D__LITTLE_ENDIAN -DNDEBUG -DGLQUAKE -DWITH_KEYMAP -DWITH_JPEG -DWITH_TCL -DWITH_PNG -DWITH_ZLIB -DWITH_ZIP -DJSS_CAM -DWITH_WINAMP -DUSE_PR2 -DWITH_IRC -DWITH_NQPROGS -DCURL_STATICLIB
	CC = mingw32-gcc-4.5.2.exe
endif

LIB_PREFIX=$(OS)-$(ARCH)

default_target: $(DEFAULT_TARGET)

all: default_target

################################
# Directories for object files #
################################

WIN_DIR = $(TYPE)-$(ARCH)/win

################
# Binary files #
################

WIN_TARGET = $(TYPE)-$(ARCH)/ezquake-gl.exe
QUAKE_DIR="/opt/quake/"

################

C_BUILD = $(_E)$(CC) -MD -c -o $@ $(_CFLAGS) $<
S_BUILD = $(_E)$(CC) -c -o $@ $(_CFLAGS) -DELF -x assembler-with-cpp $<
BUILD = $(_E)$(CC) -o $@ $(_OBJS) $(_LDFLAGS)
MKDIR = $(_E)mkdir -p $@

################

$(GLX_DIR) $(X11_DIR) $(MAC_DIR) $(WIN_DIR):
	$(MKDIR)

# compiler flags
# -DWITH_XMMS      for xmms      MP3 player support
# -DWITH_AUDACIOUS for audacious MP3 player support
# -DWITH_XMMS2     for xmms2     MP3 player support
# -DWITH_MPD       for mpd       MP3 player support
# -DWITH_WINAMP    for winamp    MP3 player support
PRJ_CFLAGS = -DWITH_ZLIB -DWITH_PNG -DJSS_CAM -DWITH_ZIP -DUSE_PR2 -DWITH_IRC -DWITH_TCL -DWITH_NQPROGS
BASE_CFLAGS = -pipe -Wall -funsigned-char $(ARCH_CFLAGS) $(PRJ_CFLAGS) -I./libs -I./libs/libircclient

########################
# pkg-config includes  #
########################
# Add support for MP3 Libraries
ifneq ($(shell echo $(PRJ_CFLAGS) | grep WITH_XMMS),)
BASE_CFLAGS += `pkg-config --libs-only-L --libs --cflags glib-2.0`
endif # WITH_XMMS
ifneq ($(shell echo $(PRJ_CFLAGS) |grep WITH_AUDACIOUS),)
BASE_CFLAGS += `pkg-config --libs-only-L --libs --cflags glib-2.0 dbus-glib-1`
endif # WITH_AUDACIOUS
ifneq ($(shell echo $(PRJ_CFLAGS) | grep WITH_XMMS2),)
BASE_CFLAGS += `pkg-config --libs-only-L --libs --cflags xmms2-client`
endif # WITH_XMMS2

ifneq ($(shell echo $(PRJ_CFLAGS) | grep WITH_OGG_VORBIS),)
BASE_CFLAGS += `pkg-config --libs-only-L --libs --cflags vorbisfile`
endif # WITH_OGG_VORBIS

########################

RELEASE_CFLAGS = -O2 -fno-strict-aliasing
DEBUG_CFLAGS = -ggdb

# opengl builds
GLCFLAGS=-DGLQUAKE -DWITH_JPEG $(OS_GL_CFLAGS)

ifeq ($(TYPE),release)
CFLAGS = $(BASE_CFLAGS) $(RELEASE_CFLAGS) -DNDEBUG
else
CFLAGS = $(BASE_CFLAGS) $(DEBUG_CFLAGS) -D_DEBUG
endif

ifeq ($(TYPE),release)
LDFLAGS = -lm -lpthread -lws2_32 -ldinput -ldsound -ldxguid -lopengl32 -lwinmm -lgdi32 -lshfolder -lshell32 -lcomctl32
else
LDFLAGS = -ggdb -lm -lpthread -lws2_32 -ldinput -ldsound -ldxguid -lopengl32 -lwinmm -lgdi32 -lshfolder -lcomctl32
endif

COMMON_LIBS = libs/$(LIB_PREFIX)/minizip.a libs/$(LIB_PREFIX)/libpng.a libs/$(LIB_PREFIX)/libz.a libs/$(LIB_PREFIX)/libpcre.a libs/$(LIB_PREFIX)/libexpat.a libs/$(LIB_PREFIX)/libtcl.a libs/$(LIB_PREFIX)/libircclient-static.a libs/$(LIB_PREFIX)/libcurl.a
GL_LIBS = libs/$(LIB_PREFIX)/libjpeg.a

ifeq ($(OS),freebsd)
LOCALBASE ?= /usr/local
CFLAGS += -I$(LOCALBASE)/include
LDFLAGS += -L$(LOCALBASE)/lib
endif

-include Makefile.list

#######
# WIN #
#######

WIN_C_OBJS = $(addprefix $(WIN_DIR)/, $(addsuffix .o, $(WIN_C_FILES)))
WIN_S_OBJS = $(addprefix $(WIN_DIR)/, $(addsuffix .o, $(WIN_S_FILES)))
WIN_CFLAGS = $(CFLAGS) $(GLCFLAGS)
WIN_LDFLAGS = $(LDFLAGS)
#-lGL -lXxf86dga -lXxf86vm -lXpm

win: _DIR = $(WIN_DIR)
win: _OBJS = $(WIN_C_OBJS) $(WIN_S_OBJS) $(COMMON_LIBS) $(GL_LIBS)
win: _LDFLAGS = $(WIN_LDFLAGS)
win: _CFLAGS = $(WIN_CFLAGS)
win: $(WIN_TARGET)

$(WIN_TARGET): $(WIN_DIR) $(WIN_C_OBJS) $(WIN_S_OBJS)
	@echo [LINK] $@
	$(BUILD)
ifeq ($(TYPE),release)
	@echo [STRIP] $@
	$(STRIP) $(STRIPFLAGS) $(WIN_TARGET)
endif

# df_win = $(WIN_DIR)/$(*F)

$(WIN_C_OBJS): $(WIN_DIR)/%.o: %.c
	@echo [CC] $<
	$(C_BUILD); \
#		cp $(df_win).d $(df_win).P; \
#		sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
#			-e '/^$$/ d' -e 's/$$/ :/' < $(df_win).d >> $(df_win).P; \
#		rm -f $(df_win).d

$(WIN_S_OBJS): $(WIN_DIR)/%.o: %.s
	@echo [CC] $<
	$(S_BUILD)

# -include $(WIN_C_OBJS:.o=.P)

#################
clean:
	@echo [CLEAN]
	@-rm -rf $(GLX_DIR) $(X11_DIR) $(MAC_DIR) $(WIN_DIR)

help:
	@echo "all     - make all the targets possible"
	@echo "install - Installs all made clients to /opt/quake"
	@echo "clean   - removes all output"
	@echo "glx     - GLX GL client"
	@echo "x11     - X11 software client"
	@echo "mac     - Mac client"
	@echo "win     - Win32 MinGW OpenGL client"


install:
	@echo [CP] $(GLX_TARGET) 	$(QUAKE_DIR)
	@cp $(GLX_TARGET) 			$(QUAKE_DIR)
#	@echo [CP] $(X11_TARGET) 	$(QUAKE_DIR)
#	@cp $(X11_TARGET)			$(QUAKE_DIR)
#	@echo [CP] $(MAC_TARGET) 	$(QUAKE_DIR)
#	@cp $(MAC_TARGET)			$(QUAKE_DIR)
